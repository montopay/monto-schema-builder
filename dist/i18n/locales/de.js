const de = {
    collapse: "Einklappen",
    expand: "Ausklappen",
    fieldDescriptionPlaceholder: "Zweck dieses Felds beschreiben",
    fieldDelete: "Feld l\xf6schen",
    fieldDescription: "Beschreibung",
    fieldDescriptionTooltip: "Kontext zur Bedeutung dieses Felds hinzuf\xfcgen",
    fieldNameLabel: "Feldname",
    fieldNamePlaceholder: "z.B. firstName, age, isActive",
    fieldNameTooltip: "CamelCase f\xfcr bessere Lesbarkeit verwenden (z.B. firstName)",
    fieldRequiredLabel: "Pflichtfeld",
    fieldType: "Feldart",
    fieldTypeExample: "Beispiel:",
    fieldTypeTooltipString: "string: Text",
    fieldTypeTooltipNumber: "number: Zahl",
    fieldTypeTooltipBoolean: "boolean: Wahr/Falsch",
    fieldTypeTooltipObject: "object: Verschachteltes JSON",
    fieldTypeTooltipArray: "array: Liste von Werten",
    fieldAddNewButton: "Feld hinzuf\xfcgen",
    fieldAddNewBadge: "Schema-Builder",
    fieldAddNewCancel: "Abbrechen",
    fieldAddNewConfirm: "Feld hinzuf\xfcgen",
    fieldAddNewDescription: "Neues Feld f\xfcr das JSON-Schema erstellen",
    fieldAddNewLabel: "Neues Feld hinzuf\xfcgen",
    fieldTypeTextLabel: "Text",
    fieldTypeTextDescription: "F\xfcr Textwerte wie Namen, Beschreibungen usw.",
    fieldTypeNumberLabel: "Zahl",
    fieldTypeNumberDescription: "F\xfcr Dezimal- oder Ganzzahlen",
    fieldTypeBooleanLabel: "Ja/Nein",
    fieldTypeBooleanDescription: "F\xfcr Wahr/Falsch-Werte",
    fieldTypeObjectLabel: "Gruppe",
    fieldTypeObjectDescription: "Zum Gruppieren verwandter Felder",
    fieldTypeArrayLabel: "Liste",
    fieldTypeArrayDescription: "F\xfcr Sammlungen von Elementen",
    propertyDescriptionPlaceholder: "Beschreibung hinzuf\xfcgen...",
    propertyDescriptionButton: "Beschreibung hinzuf\xfcgen...",
    propertyRequired: "Erforderlich",
    propertyOptional: "Optional",
    propertyDelete: "Feld l\xf6schen",
    schemaEditorTitle: "JSON-Schema-Editor",
    schemaEditorToggleFullscreen: "Vollbild umschalten",
    schemaEditorEditModeVisual: "Visuell",
    schemaEditorEditModeJson: "JSON",
    arrayMinimumLabel: "Mindestanzahl an Elementen",
    arrayMinimumPlaceholder: "Kein Minimum",
    arrayMaximumLabel: "Maximale Anzahl an Elemente",
    arrayMaximumPlaceholder: "Kein Maximum",
    arrayForceUniqueItemsLabel: "Nur eindeutige Elemente erlauben",
    arrayItemTypeLabel: "Elementtyp",
    booleanAllowFalseLabel: "Falsch-Werte erlauben",
    booleanAllowTrueLabel: "Wahr-Werte erlauben",
    booleanNeitherWarning: "Achtung: Mindestens einer von beiden Werten muss erlaubt sein.",
    numberMinimumLabel: "Minimalwert",
    numberMinimumPlaceholder: "Kein Minimum",
    numberMaximumLabel: "Maximalwert",
    numberMaximumPlaceholder: "Kein Maximum",
    numberExclusiveMinimumLabel: "Exklusives Minimum",
    numberExclusiveMinimumPlaceholder: "Kein exklusives Minimum",
    numberExclusiveMaximumLabel: "Exklusives Maximum",
    numberExclusiveMaximumPlaceholder: "Kein exklusives Maximum",
    numberMultipleOfLabel: "Vielfaches von",
    numberMultipleOfPlaceholder: "Beliebig",
    numberAllowedValuesEnumLabel: "Erlaubte Werte (Enum)",
    numberAllowedValuesEnumNone: "Keine Einschr\xe4nkung f\xfcr Werte festgelegt",
    numberAllowedValuesEnumAddLabel: "Hinzuf\xfcgen",
    numberAllowedValuesEnumAddPlaceholder: "Erlaubten Wert hinzuf\xfcgen...",
    objectPropertiesNone: "Keine Eigenschaften definiert",
    stringMinimumLengthLabel: "Minimale L\xe4nge",
    stringMinimumLengthPlaceholder: "Kein Minimum",
    stringMaximumLengthLabel: "Maximale L\xe4nge",
    stringMaximumLengthPlaceholder: "Kein Maximum",
    stringPatternLabel: "Muster (Regex)",
    stringPatternPlaceholder: "^[a-zA-Z]+$",
    stringFormatLabel: "Format",
    stringFormatNone: "Keins",
    stringFormatDateTime: "Datum und Uhrzeit",
    stringFormatDate: "Datum",
    stringFormatTime: "Uhrzeit",
    stringFormatEmail: "E-Mail",
    stringFormatUri: "URI",
    stringFormatUuid: "UUID",
    stringFormatHostname: "Hostname",
    stringFormatIpv4: "IPv4-Adresse",
    stringFormatIpv6: "IPv6-Adresse",
    stringAllowedValuesEnumLabel: "Erlaubte Werte (Enum)",
    stringAllowedValuesEnumNone: "Keine Einschr\xe4nkung f\xfcr Werte festgelegt",
    stringAllowedValuesEnumAddPlaceholder: "Erlaubten Wert hinzuf\xfcgen...",
    schemaTypeArray: "Liste",
    schemaTypeBoolean: "Ja/Nein",
    schemaTypeNumber: "Zahl",
    schemaTypeObject: "Objekt",
    schemaTypeString: "Text",
    schemaTypeNull: "Leer",
    inferrerTitle: "JSON-Schema ableiten",
    inferrerDescription: "JSON-Dokument unten einf\xfcgen, um ein Schema daraus zu erstellen.",
    inferrerCancel: "Abbrechen",
    inferrerGenerate: "Schema erstellen",
    inferrerErrorInvalidJson: "Ung\xfcltiges JSON-Format. Bitte Eingabe pr\xfcfen.",
    validatorTitle: "JSON validieren",
    validatorDescription: "JSON-Dokument einf\xfcgen, um es gegen das aktuelle Schema zu pr\xfcfen. Die Validierung erfolgt automatisch beim Tippen.",
    validatorCurrentSchema: "Aktuelles Schema:",
    validatorContent: "Zu pr\xfcfendes JSON:",
    validatorValid: "JSON ist g\xfcltig zum Schema!",
    validatorErrorInvalidSyntax: "Ung\xfcltige JSON-Syntax",
    validatorErrorSchemaValidation: "Schema-Validierungsfehler",
    validatorErrorCount: "{count} Validierungsfehler gefunden",
    validatorErrorPathRoot: "Wurzel",
    validatorErrorLocationLineAndColumn: "Zeile {line}, Spalte {column}",
    validatorErrorLocationLineOnly: "Zeile {line}",
    visualizerDownloadTitle: "Schema herunterladen",
    visualizerDownloadFileName: "schema.json",
    visualizerSource: "JSON-Schema-Quelle",
    visualEditorNoFieldsHint1: "Noch keine Felder definiert",
    visualEditorNoFieldsHint2: "Erstes Feld hinzuf\xfcgen, um zu starten"
};
export { de };
